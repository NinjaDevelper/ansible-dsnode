---
- name: Update apt
  apt: update_cache=yes

- name: Install prerequisites
  apt: pkg={{ item }} state=latest
  with_items:
    - mysql-server
    - libcrypto++-dev    
    - libgmp-dev
    - python-mysqldb
    - git
    - python-pip
    - python-dev
    - nginx

- name: Install virtualenv
  pip: name=virtualenv
    
- name: Setup the database
  mysql_db: name=downstream

- name: Print password for debugging
  debug: msg="Password is {{ dsnodemysqlpassword }}"

- name: Setup the database user
  mysql_user: name=downstream password="{{ dsnodemysqlpassword }}" priv=downstream.*:ALL
  
- name: Set up the downstream-node user
  user: name={{ dsnodeuser }}

- name: Clone downstream-node repo
  git: repo={{dsnoderepourl}} dest={{dsnodeprojroot}}
  
- name: Chown downstream-node repo
  file: path={{dsnodeprojroot}} recurse=true owner={{dsnodeuser}} group={{dsnodeuser}}

- name: Create data directory
  file: path={{dsnodedataroot}} state=directory

- stat: path={{dsnodegeodbpath}}
  register: st
  
- name: Pull in geolocation database and unzip
  command: "{{item}}"
  with_items:
    - curl -o {{dsnodegeodbpath}}.gz {{dsnodemaxminddburl}}
    - gunzip {{dsnodegeodbpath}}.gz
  when: st.stat.isreg is not defined or not st.stat.isreg
  
- name: Copy downstream-node config
  template: src=config.py dest={{dsnodelibroot}}/config.py

- name: Install downstream-node
  pip: requirements={{dsnodeprojroot}}/requirements.txt virtualenv={{dsnodeenv}}
  
- name: Initialize database
  command: "{{dsnodeenv}}/bin/python {{dsnodeprojroot}}/runapp.py --initdb"

- name: Clone whitelist
  git: repo={{dsnodewhitelistrepourl}} dest={{dsnodewhitelistroot}}
  
- name: Initialize whitelist
  command: "{{dsnodeenv}}/bin/python {{dsnodeprojroot}}/runapp.py --whitelist {{dsnodewhitelistfile}}"
  
- name: Install uwsgi
  pip: name=uwsgi virtualenv={{dsnodeenv}}

- name: Copy uwsgi config
  template: src=node_uwsgi.ini dest={{dsnodeuwsgiini}}
  
- name: Copy uwsgi startup
  template: src=uwsgi.conf dest=/etc/init/uwsgi.conf
  
- name: Ensure uwsgi log directory exists
  file: path=/var/log/uwsgi recurse=yes owner={{dsnodeuser}} group={{dsnodeuser}} state=directory
  
- name: Remove default nginx config
  file: path=/etc/nginx/sites-enabled/default.conf state=absent
  
- name: Copy nginx downstream node site config
  template: src=node_nginx.conf dest=/etc/nginx/sites-available/node_nginx.conf
  notify: Restart nginx
  
- name: Link nginx downstream node site config
  file: path=/etc/nginx/sites-enabled/node_nginx.conf src=/etc/nginx/sites-available/node_nginx.conf state=link
  notify: Restart uwsgi
